from typing import Protocol, Optional, Literal
from playwright.sync_api import Locator

WaitState = Literal["visible", "hidden", "attached", "detached"]


class UIDriver(Protocol):
    def goto(self, url: str) -> None: ...
    def click(self, sel: str, timeout_ms: Optional[int] = None) -> None: ...
    def type(self, sel: str, text: str, delay_ms: Optional[int] = None, timeout_ms: Optional[int] = None) -> None: ...
    def fill(self, sel: str, text: str, timeout_ms: Optional[int] = None) -> None: ...
    def text(self, sel: str, timeout_ms: Optional[int] = None) -> str: ...
    def is_visible(self, sel: str, timeout_ms: Optional[int] = None) -> bool: ...
    def wait_for(self, sel: str, state: WaitState = "visible", timeout_ms: Optional[int] = None) -> None: ...
    def screenshot(self, path: str, full_page: bool = True) -> None: ...
    # Optional extras
    def attr(self, sel: str, name: str, timeout_ms: Optional[int] = None) -> Optional[str]: ...
    def count(self, sel: str, timeout_ms: Optional[int] = None) -> int: ...
    def wait_for_function(self, js_code: str, timeout: int) -> None: ...
    def locator(self, loc: str) -> Locator: ...
    def get_by_text(self, text: str) -> Locator: ...
