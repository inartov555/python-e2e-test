name: Pylint

on: [push]

jobs:
  lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      
      - name: Make project importable (PYTHONPATH)
        run: echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV

      - name: Make project importable (PYTHONPATH)
        run: echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV

      # Strict lint for application code (src/, tools/, and top-level .py files), exclude tests
      - name: Lint app code (strict)
        run: |
          APP_FILES="$(git ls-files \
            'src/**/*.py' \
            'tools/**/*.py' \
            '*.py' \
            ':!tests/**' \
          )" || true

          if [ -n "$APP_FILES" ]; then
            pylint --max-line-length=128 \
                   --disable=too-many-arguments,too-many-positional-arguments \
                   $APP_FILES
          else
            echo "No application files to lint."
          fi

      # Relaxed lint for tests only
      - name: Lint tests (relaxed)
        run: |
          TEST_FILES="$(git ls-files 'tests/**/*.py' 'tests/*.py')" || true

          if [ -n "$TEST_FILES" ]; then
            pylint --max-line-length=128 \
                   --disable=no-member,too-few-public-methods \
                   $TEST_FILES
          else
            echo "No test files found."
          fi
